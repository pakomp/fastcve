<?php
/**
 * CommonModelsCvssV2CveCvssDataModelTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Msn\Apis\FastCVE
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FastCVE
 *
 * fast, rich and API-based search for CVE and more (CPE, CWE, CAPEC)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Msn\Apis\FastCVE\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CommonModelsCvssV2CveCvssDataModelTest Class Doc Comment
 *
 * @category    Class
 * @description CommonModelsCvssV2CveCvssDataModel
 * @package     Msn\Apis\FastCVE
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CommonModelsCvssV2CveCvssDataModelTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CommonModelsCvssV2CveCvssDataModel"
     */
    public function testCommonModelsCvssV2CveCvssDataModel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vector_string"
     */
    public function testPropertyVectorString()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "access_vector"
     */
    public function testPropertyAccessVector()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "access_complexity"
     */
    public function testPropertyAccessComplexity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authentication"
     */
    public function testPropertyAuthentication()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "confidentiality_impact"
     */
    public function testPropertyConfidentialityImpact()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "integrity_impact"
     */
    public function testPropertyIntegrityImpact()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availability_impact"
     */
    public function testPropertyAvailabilityImpact()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_score"
     */
    public function testPropertyBaseScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exploitability"
     */
    public function testPropertyExploitability()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remediation_level"
     */
    public function testPropertyRemediationLevel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "report_confidence"
     */
    public function testPropertyReportConfidence()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temporal_score"
     */
    public function testPropertyTemporalScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "collateral_damage_potential"
     */
    public function testPropertyCollateralDamagePotential()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "target_distribution"
     */
    public function testPropertyTargetDistribution()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "confidentiality_requirement"
     */
    public function testPropertyConfidentialityRequirement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "integrity_requirement"
     */
    public function testPropertyIntegrityRequirement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availability_requirement"
     */
    public function testPropertyAvailabilityRequirement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "environmental_score"
     */
    public function testPropertyEnvironmentalScore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
